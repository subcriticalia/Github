To Do:

Genericise the SDRAM controller so that both projects can use the same one.

Simplify bank mapping.  Since the entire Amiga memory map fits easily within SDRAM
on the Chameleon and C3 board, there's no need for clever memory map trickery;
everything can simply use its native address.
On the DE1 board we only have 8 meg available.  Suggest:
0x000000-0x200000: chipram
0x200000-0x600000: fast RAM
0x600000-0x780000: slow RAM
0x780000-0x800000: kickstart ROM
The bottom line is that memory mapping should be board-specific, not a core function.
This would allow turbo-kickstart, turbo-chipram, turbo-slowram, etc.

(The original fastram implementation maps 0x200000 to 0x1200000
and the OSD processor's RAM to 0xa00000.  Mapping the fastram to 0x400000 would
be more convenient, since it would leave the second 16 meg free.
We now use a look-up to map ZII FastRAM into spare portions of the first 16 meg,
leaving the second 16-meg clear for AddRAM'ed ZIII RAM.)

| Add data cache
Add write cache
Add larger caches

Add multi-slot capability to SDRAM controller.

| Add extra 16 meg of RAM (using addram if need be)

Look at adding extra SPI devices; maybe allow proper direct SD card access, via an
sdmmc.device
Look at supporting SPI-based ethernet

Look at presenting better geometry to the Amiga when using direct SD access, to make
Fat95 more usable.

Check TG68K movem.l ,(ax) bug

Try to simplify/speed up the TG68 ALU using hardware multipliers and div megafunc.

| Try out alternative sigma-delta arrangements to fix Gauntlet III noises.

Explore the possibility of hardware assist for MP3 and JPEG decoding.

Create a Chameleon toplevel.

Add support for Graffiti modes.

Hotswap for SD cards

Add OSD processor configuration registers.  We don't really want platform-specific
configuration details going to the general purpose chipset core.
Move such things as Return to Chameleon, Fastmem config and Turbo Chipram enables
to the cfide component.
